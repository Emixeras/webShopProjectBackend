openapi: 3.0.0
servers:
  - description: local Backend Address
    url: 'http://localhost:8080/'
info:
  description: Dies ist die API des Webshop Backends
  version: 1.0.0
  title: WEBSHOP API
  contact:
    email: mirco_christoph.mueller@edu.fhdw.de
tags:
  - name: article
    description: Operations on Article Object
paths:
  /article/{id}/:
    get:
      tags:
        - article
      summary: get a single Article Object
      description: this is the Endpoint returning a single Article Object, it converts the picture if existent to a binary stream.
      responses:
        '200':
          $ref: '#/components/responses/ArticleObject'
  /article/:
    post:
      summary: post a new Article Object
      tags:
        - article
      responses:
        '200':
          $ref: '#/components/responses/ArticleObject'
      requestBody:
        $ref: '#/components/requestBodies/UploadArticlewithPicture'
  /article/all:

    get:
      summary: gets All Article Metadata Objects
      tags:
        - article
      responses:
        '200':
          $ref: '#/components/responses/ArticleMetadataList'


components:
  schemas:
    articleMetadata:
      type: object
      required:
        - title
        - interpret
        - genre
        - price
        - picture
      properties:
        id:
          type: number
        title:
          type: string
          example: Nach Uns Die Sintflut
        artist:
          $ref: '#/components/schemas/ArticleArtist'
        price:
          type: number
          example: 12,99
        description:
          type: string
          example: Die Single ist nur einseitig bespielt, auf der Rückseite befinden sich die eingeritzten Autogramme der Ärzte.
        ean:
          type: number
          example: 5099746311919
        articlegenre:
          $ref: '#/components/schemas/articleGenre'
    articlePicture:
      type: object
      required:
        -picture
      properties:
        picture:
          type: string
          format: binary
    articleGenre:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: Rock
    ArticleArtist:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: Die Ärzte
  requestBodies:
    UploadArticlewithPicture:
      description: Multipart Upload welcher den gleichzeitigen Upload mit einem Bild erlaubt
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              ArticleMetadata:
                $ref: '#/components/schemas/articleMetadata'
              fileName:
                type: string
                format: binary
          encoding:
            ArticlePicture:
              contentType: image/png, image/jpeg
  responses:
    ArticleObject:
      description: returning a single Article Object
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              ArticleMetadata:
                $ref: '#/components/schemas/articleMetadata'
              ArticlePicture:
                $ref: '#/components/schemas/articlePicture'
          encoding: # The same level as schema
            ArticlePicture: # Property name (see above)
              contentType: image/png, image/jpeg
    ArticleMetadataList:
      description: Returns a List of All Metadata Objects
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/articleMetadata'


