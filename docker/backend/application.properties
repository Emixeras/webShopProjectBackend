# configure your datasource
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=shop
quarkus.datasource.password=Test1234
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/shop
quarkus.hibernate-orm.database.generation.create-schemas=true 
# drop and create the database at startup (use `update` to only update the schema)
#quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.database.generation=drop-and-create
# Logging:
quarkus.log.level=INFO
quarkus.log.category."org.hibernate".level=INFO
# Security
quarkus.security.jdbc.enabled=true
quarkus.security.jdbc.principal-query.sql=SELECT u.password, CASE WHEN u.role = 0 THEN 'admin' WHEN u.role = 1 THEN 'employee'  WHEN u.role = 2 THEN 'user' END translation    FROM shopuser u WHERE u.email=? 
quarkus.security.jdbc.principal-query.clear-password-mapper.enabled=true 
quarkus.security.jdbc.principal-query.clear-password-mapper.password-index=1
quarkus.security.jdbc.principal-query.attribute-mappings.0.index=2 
quarkus.security.jdbc.principal-query.attribute-mappings.0.to=groups
#Some Header Settings:
quarkus.http.cors=true
quarkus.http.cors.methods=HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS
quarkus.http.cors.access-control-max-age=24H
quarkus.http.cors.access-control-allow-credentials=true
quarkus.http.cors.exposed-headers=X-API-KEY, Origin, X-Requested-With, Content-Type, Accept, Access-Control-Request-Method,Access-Control-Request-Headers, Authorization

#Limit Upload Size:
quarkus.http.limits.max-body-size = 5M

#OpenAPI
quarkus.swagger-ui.store-schema-directory=/apiDoc
quarkus.swagger-ui.path=/openapi